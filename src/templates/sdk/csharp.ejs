```csharp

using Authing.CSharp.SDK.Models;
using Authing.CSharp.SDK.Services;
using Authing.CSharp.SDK.Utils;
using Authing.CSharp.SDK.UtilsImpl;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Example
{
    class Program
    {
      private static ManagementClientOptions options;
      private static string ACCESS_Key_ID = "AUTHING_USERPOOL_ID";
      private static string ACCESS_KEY_SECRET = "AUTHING_USERPOOL_SECRET";

      static void Main(string[] args)
      {
          MainAsync().GetAwaiter().GetResult();
      }

      private static async Task MainAsync()
      {
          options = new ManagementClientOptions()
          {
              AccessKeyId = ACCESS_Key_ID,
              AccessKeySecret = ACCESS_KEY_SECRET,
          };

          ManagementClient managementClient = new ManagementClient(options);
        <% let a=0 %><% let name="" %><%  if(request){name=request.name} %>
          var result = await managementClient.<%- getName(fnNameCamel) %>
          (
            <% if (request) { %>  new <%- request.name %>{<% } %>
            <%  options.parameters.forEach((p)=>{%> <% a++ %>
                <%-p.name%>: <%- `${p.schema.type==='string'||p.schema?.items?.type==='string'?"\"":''}${p.example??p.default}${p.schema.type==='string'||p.schema?.items?.type==='string'?"\"":''}` -%>
                <% if(a<options.parameters.length){%>,<%}%><%}); %><% if (request) { %><% Object.entries(request.properties).forEach(function([key,p]){ %><%- include('../partial/csharp_params', {key,p,models,name}) -%>
            <%}); %><% }%><% if(request){%>}<%}%>
          );
        }
    }
}
<% function getName(str){ return str.charAt(0).toUpperCase() + str.slice(1);} %>
<% function returnStr(total,current){console.log("ssss");return ';;;;;;';} %>

```
